<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyl.dict.gatewayimpl.database.SysConfigDao">

    <resultMap type="com.wyl.dict.gatewayimpl.database.dataobject.SysConfig" id="SysConfigMap">
        <result property="configId" column="config_id" jdbcType="INTEGER"/>
        <result property="configName" column="config_name" jdbcType="VARCHAR"/>
        <result property="configKey" column="config_key" jdbcType="VARCHAR"/>
        <result property="configValue" column="config_value" jdbcType="VARCHAR"/>
        <result property="configType" column="config_type" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryByPrimaryKey" resultMap="SysConfigMap">
        select
          config_id, config_name, config_key, config_value, config_type, create_by, create_time, update_by, update_time, remark
        from sys_config
        where config_id = #{configId}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SysConfigMap">
        select
        config_id, config_name, config_key, config_value, config_type, create_by, create_time, update_by, update_time,
        remark
        from sys_config
        <where>
            <if test="configName != null and configName != ''">
                and config_name like concat('%', #{configName}, '%')
            </if>
            <if test="configKey != null and configKey != ''">
                and config_key like concat('%', #{configKey}, '%')
            </if>
            <if test="configValue != null and configValue != ''">
                and config_value = #{configValue}
            </if>
            <if test="configType != null and configType != ''">
                and config_type = #{configType}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="configId" useGeneratedKeys="true">
        insert into sys_config(config_name, config_key, config_value, config_type, create_by, create_time, update_by, update_time, remark)
        values (#{configName}, #{configKey}, #{configValue}, #{configType}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="configId" useGeneratedKeys="true">
        insert into sys_config(config_name, config_key, config_value, config_type, create_by, create_time, update_by,
        update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.configName}, #{entity.configKey}, #{entity.configValue}, #{entity.configType}, #{entity.createBy},
            #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="configId" useGeneratedKeys="true">
        insert into sys_config(config_name, config_key, config_value, config_type, create_by, create_time, update_by,
        update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.configName}, #{entity.configKey}, #{entity.configValue}, #{entity.configType}, #{entity.createBy},
            #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        config_name = values(config_name) , config_key = values(config_key) , config_value = values(config_value) ,
        config_type = values(config_type) , create_by = values(create_by) , create_time = values(create_time) ,
        update_by = values(update_by) , update_time = values(update_time) , remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_config
        <set>
            <if test="configName != null">
                config_name = #{configName},
            </if>
            <if test="configKey != null">
                config_key = #{configKey},
            </if>
            <if test="configValue != null">
                config_value = #{configValue},
            </if>
            <if test="configType != null">
                config_type = #{configType},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        where config_id = #{configId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey">
        delete from sys_config where config_id = #{configId}
    </delete>

</mapper>

