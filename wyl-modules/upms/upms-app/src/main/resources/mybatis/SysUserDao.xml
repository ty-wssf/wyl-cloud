<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyl.upms.gatewayimpl.database.SysUserDao">

    <resultMap type="com.wyl.upms.gatewayimpl.database.dataobject.SysUser" id="SysUserMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="deptId" column="dept_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phonenumber" column="phonenumber" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="VARCHAR"/>
        <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
        <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <association property="dept" column="dept_id" javaType="com.wyl.upms.gatewayimpl.database.dataobject.SysDept"
                     resultMap="deptResult"/>
    </resultMap>

    <resultMap id="deptResult" type="com.wyl.upms.gatewayimpl.database.dataobject.SysDept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryByPrimaryKey" resultMap="SysUserMap">
        select
          user_id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password, status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark
        from sys_user
        where user_id = #{userId}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SysUserMap">
        select
        u.user_id, u.dept_id, u.user_name, u.nick_name, u.user_type, u.email, u.phonenumber, u.sex, u.avatar,
        u.password, u.status,
        u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.update_by, u.update_time, u.remark,
        d.dept_name, d.leader
        from sys_user u
        left join sys_dept d on u.dept_id = d.dept_id
        <where>
            <if test="userName != null and userName != ''">
                and user_name like concat('%', #{userName}, '%')
            </if>
            <if test="phonenumber != null and phonenumber != ''">
                and phonenumber like concat('%', #{phonenumber}, '%')
            </if>
            <if test="status != null and status != ''">
                and u.status = #{status}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
            <if test="deptId != null and deptId != 0">
                AND u.dept_id = #{deptId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="userType != null">user_type,</if>
            <if test="email != null">email,</if>
            <if test="phonenumber != null">phonenumber,</if>
            <if test="sex != null">sex,</if>
            <if test="avatar != null">avatar,</if>
            <if test="password != null">password,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="loginIp != null">login_ip,</if>
            <if test="loginDate != null">login_date,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">#{deptId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="userType != null">#{userType},</if>
            <if test="email != null">#{email},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="sex != null">#{sex},</if>
            <if test="avatar != null">#{avatar},</if>
            <if test="password != null">#{password},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="loginIp != null">#{loginIp},</if>
            <if test="loginDate != null">#{loginDate},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user(dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password,
        status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.deptId}, #{entity.userName}, #{entity.nickName}, #{entity.userType}, #{entity.email},
            #{entity.phonenumber}, #{entity.sex}, #{entity.avatar}, #{entity.password}, #{entity.status},
            #{entity.delFlag}, #{entity.loginIp}, #{entity.loginDate}, #{entity.createBy}, #{entity.createTime},
            #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user(dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password,
        status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.deptId}, #{entity.userName}, #{entity.nickName}, #{entity.userType}, #{entity.email},
            #{entity.phonenumber}, #{entity.sex}, #{entity.avatar}, #{entity.password}, #{entity.status},
            #{entity.delFlag}, #{entity.loginIp}, #{entity.loginDate}, #{entity.createBy}, #{entity.createTime},
            #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        dept_id = values(dept_id) , user_name = values(user_name) , nick_name = values(nick_name) , user_type =
        values(user_type) , email = values(email) , phonenumber = values(phonenumber) , sex = values(sex) , avatar =
        values(avatar) , password = values(password) , status = values(status) , del_flag = values(del_flag) , login_ip
        = values(login_ip) , login_date = values(login_date) , create_by = values(create_by) , create_time =
        values(create_time) , update_by = values(update_by) , update_time = values(update_time) , remark =
        values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_user
        <set>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="userType != null">
                user_type = #{userType},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phonenumber != null">
                phonenumber = #{phonenumber},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="loginIp != null">
                login_ip = #{loginIp},
            </if>
            <if test="loginDate != null">
                login_date = #{loginDate},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey">
        delete from sys_user where user_id = #{userId}
    </delete>

</mapper>

